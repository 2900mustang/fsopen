{"version":3,"sources":["components/PersonForm.js","components/Persons.js","components/Filter.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["PersonForm","props","onSubmit","value","newName","onChange","newNumber","onChange2","type","Persons","filter","persons","deletePersonOf","newPersons","length","person","name","toLowerCase","includes","map","key","number","onClick","id","Filter","filterName","handleFilterName","baseUrl","axios","get","then","res","data","newObj","post","delete","console","log","put","Notification","notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","App","useState","setPersons","setNewName","setNewNumber","setFilterName","setNotification","useEffect","personService","notify","setTimeout","event","target","preventDefault","existingPerson","find","window","confirm","replacedPerson","catch","personObj","trim","newPerson","concat","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63699b4a.chunk.js","sourcesContent":["import React from 'react';\n\nconst PersonForm = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t<form onSubmit={props.onSubmit}>\n\t\t\t<div>\n\t\t\t\tname: <input value={props.newName} onChange={props.onChange}/>\t\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\tnumber: <input value={props.newNumber} onChange={props.onChange2} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<button type=\"submit\">add</button>\n\t\t\t</div>\n\t\t\t</form>\t\t\t\t\t\n\t\t</div>\n\t);\n};\n\nexport default PersonForm;","import React from 'react';\n\nconst Persons = ({filter, persons, deletePersonOf}) => {\n\tconst newPersons = filter.length ? persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase())) : persons\n\n\treturn (\n\t\t<ul>\n\t\t\t{newPersons.map(person => \n\t\t\t\t<li key={person.name}>\n\t\t\t\t\t{person.name} {person.number} \n\t\t\t\t\t<button onClick={() => deletePersonOf(person.id)}>delete</button>\n\t\t\t\t</li>\t\n\t\t\t)}\n\t\t\t{/* {rows()} */}\n\t\t</ul>\n\t);\n};\n\nexport default Persons;","import React from 'react';\n\nconst Filter = (props) => {\n\treturn (\n\t\t<div>\n\t\t\tfilter shown with <input value={props.filterName} onChange={props.handleFilterName} />\n\t\t</div>\n\t);\n};\n\nexport default Filter;","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n\tconst req = axios.get(baseUrl)\n\treturn req.then(res => res.data)\n}\n\nconst create = newObj => {\n\tconst req = axios.post(baseUrl, newObj)\n\treturn req.then(res => res.data)\n}\n\nconst remove = id => {\n\tconst req = axios.delete(`${baseUrl}/${id}`)\n\treturn req.then(res => res.data)\n}\n\nconst replace = (person) => {\n\tconsole.log(person)\n\tconst req = axios.put(`${baseUrl}/${person.id}`, person)\n\treturn req.then(res => res.data)\n}\n\nexport default { getAll, create, remove, replace }","import React from 'react';\n\nconst Notification = ({notification}) => {\n\tif (!notification.message) {\n\t\treturn null\n\t}\n\n\tconst style = {\n\t\tcolor: notification.type === 'error' ? 'red' : 'green',\n\t\tbackground: 'lightgrey',\n\t\tfontSize: 20,\n\t\tborderStyle: 'solid',\n\t\tborderRadius: 5,\n\t\tpadding: 10,\n\t\tmarginBottom: 10\n\t}\n\n\treturn (\n\t\t<div style={style}>\n\t\t\t{notification.message}\n\t\t</div>\n\t);\n};\n\nexport default Notification","import React, {useState, useEffect} from 'react'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n\tconst [ persons, setPersons] = useState([]) \n\tconst [ newName, setNewName ] = useState('')\n\tconst [newNumber, setNewNumber] = useState('')\n\tconst [filterName, setFilterName] = useState('')\n\tconst [ notification, setNotification ] = useState({message: null})\n\n\tconst hook = () => {\n\t\tpersonService\n\t\t\t.getAll()\n\t\t\t.then(res => {\n\t\t\t\tsetPersons(res)\n\t\t\t})\n\t}\n\n\tuseEffect(hook, [])\n\n\tconst notify = (message, type='ok') => {\n\t\tsetNotification({message, type})\n\t\tsetTimeout(() => setNotification({ message: null }), 3500)\n\t}\n\n\tconst handleNameChange = (event) => {\n\t\tsetNewName(event.target.value)\n\t}\n\n\tconst addPerson = (event) => {\n\t\tevent.preventDefault()\n\n\t\tconst existingPerson = persons.find(person => person.name === newName)\n\n\t\tif (existingPerson) {\n\t\t\tif (window.confirm(`Replace ${newName}'s number with a new number?`)) {\n\t\t\t\tpersonService\n\t\t\t\t\t.replace({\n\t\t\t\t\t\t...existingPerson,\n\t\t\t\t\t\tnumber: newNumber\n\t\t\t\t\t})\n\t\t\t\t\t.then(replacedPerson => {\n\t\t\t\t\t\tsetPersons(persons.map(person => person.name === existingPerson.name ? replacedPerson : person))\n\t\t\t\t\t\tsetNewName('')\n\t\t\t\t\t\tsetNewNumber('')\n\t\t\t\t\t\tnotify(`${newName}'s number has been changed.`)\n\t\t\t\t\t})\n\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\tsetPersons(persons.filter(person => person.name !== existingPerson.name))\n\t\t\t\t\t\tnotify(`${existingPerson.name} has already been deleted`, 'error')\n\t\t\t\t\t})\n\t\t\t}\n\t\t\treturn \n\t\t}\n\t\t\n\t\tconst personObj = {\n\t\t\tname: newName.trim(),\n\t\t\tnumber: newNumber,\n\t\t\tid: persons.length + 1\n\t\t}\n\n\t\tpersonService\n\t\t\t.create(personObj)\n\t\t\t.then(newPerson => {\n\t\t\t\tsetPersons(persons.concat(personObj))\n\t\t\t\tsetNewName('')\n\t\t\t\tsetNewNumber('')\n\t\t\t\tnotify(`new contact created ${newPerson.name}`)\n\t\t\t})\n\t}\n\n\tconst handleNumberChange = (event) => {\n\t\tsetNewNumber(event.target.value)\n\t}\n\n\tconst handleFilterName = (event) => {\n\t\tsetFilterName(event.target.value)\n\t}\n\n\tconst deletePersonOf = id => {\n\t\tconst person = persons.find(person => person.id === id)\n\t\tif (window.confirm(`delete ${person.name}?`)) {\n\t\t\tpersonService\n\t\t\t\t.remove(id)\n\t\t\t\t.then(() => {\n\t\t\t\t\tsetPersons(persons.filter(p => p.id !== id))\n\t\t\t\t})\n\t\t\tnotify(`deleted ${person.name}`)\n\t\t}\n\t}\n\n\treturn (\n\t<div>\n\t\t<h2>Phonebook</h2>\n\n\t\t<Notification notification={notification} />\n\n\t\t<Filter filterName={filterName} handleFilterName={handleFilterName} persons={persons} />\n\n\t\t<h2>add a new contact</h2>\n\t\t<PersonForm onSubmit={addPerson} onChange={handleNameChange} onChange2={handleNumberChange} newName={newName} newNumber={newNumber} />\n\n\t\t<h2>Numbers</h2>\n\t\t<Persons filter={filterName} persons={persons} deletePersonOf={deletePersonOf} />\n\t</div>\n\t)\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}